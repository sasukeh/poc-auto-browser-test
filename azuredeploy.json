{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerapps_acaapp_poc_aca_name": {
      "defaultValue": "acaapp-poc-aca",
      "type": "String"
    },
    "staticSites_swa_poc_auto_browser_test_name": {
      "defaultValue": "swa-poc-auto-browser-test",
      "type": "String"
    },
    "managedEnvironments_acaapp_poc_aca_env_name": {
      "defaultValue": "acaapp-poc-aca-env",
      "type": "String"
    },
    "registries_cac3a19541d4acr_name": {
      "defaultValue": "cac3a19541d4acr",
      "type": "String"
    },
    "databaseAccounts_cosmos_poc_broser_test_name": {
      "defaultValue": "cosmos-poc-broser-test",
      "type": "String"
    },
    "accounts_aoai_poc_auto_browser_test_name": {
      "defaultValue": "aoai-poc-auto-browser-test",
      "type": "String"
    },
    "workspaces_workspace_rgpocautobrowsertestmI0Z_name": {
      "defaultValue": "workspace-rgpocautobrowsertestmI0Z",
      "type": "String"
    },
    "smartdetectoralertrules_failure_anomalies___ai_poc_auto_browser_test_name": {
      "defaultValue": "failure anomalies - ai-poc-auto-browser-test",
      "type": "String"
    },
    "components_ai_poc_auto_browser_test_externalid": {
      "defaultValue": "/subscriptions/9819147e-88ee-45cb-9c60-d3cd02e918e8/resourceGroups/rg-poc-auto-browser-test/providers/microsoft.insights/components/ai-poc-auto-browser-test",
      "type": "String"
    },
    "actiongroups_application_insights_smart_detection_externalid": {
      "defaultValue": "/subscriptions/9819147e-88ee-45cb-9c60-d3cd02e918e8/resourceGroups/rg-rag-extra-1/providers/microsoft.insights/actiongroups/application insights smart detection",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts/defenderForAISettings",
      "apiVersion": "2024-10-01",
      "name": "[concat(parameters('accounts_aoai_poc_auto_browser_test_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_aoai_poc_auto_browser_test_name'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2024-10-01",
      "name": "[concat(parameters('accounts_aoai_poc_auto_browser_test_name'), '/gpt-4o')]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_aoai_poc_auto_browser_test_name'))]"
      ],
      "sku": {
        "name": "GlobalStandard",
        "capacity": 100
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-4o",
          "version": "2024-11-20"
        },
        "versionUpgradeOption": "OnceCurrentVersionExpired",
        "currentCapacity": 100,
        "raiPolicyName": "Microsoft.Default"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "apiVersion": "2024-09-01-preview",
      "name": "[concat(parameters('databaseAccounts_cosmos_poc_broser_test_name'), '/00000000-0000-0000-0000-000000000001')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
      ],
      "properties": {
        "roleName": "Cosmos DB Built-in Data Reader",
        "type": "BuiltInRole",
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
            ],
            "notDataActions": []
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "apiVersion": "2024-09-01-preview",
      "name": "[concat(parameters('databaseAccounts_cosmos_poc_broser_test_name'), '/00000000-0000-0000-0000-000000000002')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
      ],
      "properties": {
        "roleName": "Cosmos DB Built-in Data Contributor",
        "type": "BuiltInRole",
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
            ],
            "notDataActions": []
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2024-09-01-preview",
      "name": "[concat(parameters('databaseAccounts_cosmos_poc_broser_test_name'), '/agent-db')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "agent-db"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2024-09-01-preview",
      "name": "[concat(parameters('databaseAccounts_cosmos_poc_broser_test_name'), '/agent-db/agent-container')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmos_poc_broser_test_name'), 'agent-db')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_poc_broser_test_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "agent-container",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash",
            "version": 2
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          },
          "computedProperties": []
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2023-11-01-preview",
      "name": "[concat(parameters('registries_cac3a19541d4acr_name'), '/_repositories_admin')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_cac3a19541d4acr_name'))]"
      ],
      "properties": {
        "description": "Can perform all read, write and delete operations on the registry",
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write",
          "repositories/*/content/delete"
        ]
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2023-11-01-preview",
      "name": "[concat(parameters('registries_cac3a19541d4acr_name'), '/_repositories_pull_metadata_read')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_cac3a19541d4acr_name'))]"
      ],
      "properties": {
        "description": "Can perform all read operations on the registry",
        "actions": [
          "repositories/*/content/read",
          "repositories/*/metadata/read"
        ]
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2023-11-01-preview",
      "name": "[concat(parameters('registries_cac3a19541d4acr_name'), '/_repositories_pull')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_cac3a19541d4acr_name'))]"
      ],
      "properties": {
        "description": "Can pull any repository of the registry",
        "actions": ["repositories/*/content/read"]
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2023-11-01-preview",
      "name": "[concat(parameters('registries_cac3a19541d4acr_name'), '/_repositories_push_metadata_write')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_cac3a19541d4acr_name'))]"
      ],
      "properties": {
        "description": "Can perform all read and write operations on the registry",
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write"
        ]
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2023-11-01-preview",
      "name": "[concat(parameters('registries_cac3a19541d4acr_name'), '/_repositories_push')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_cac3a19541d4acr_name'))]"
      ],
      "properties": {
        "description": "Can push to any repository of the registry",
        "actions": [
          "repositories/*/content/read",
          "repositories/*/content/write"
        ]
      }
    },
    {
      "type": "Microsoft.Web/staticSites/basicAuth",
      "apiVersion": "2024-04-01",
      "name": "[concat(parameters('staticSites_swa_poc_auto_browser_test_name'), '/default')]",
      "location": "East US 2",
      "dependsOn": [
        "[resourceId('Microsoft.Web/staticSites', parameters('staticSites_swa_poc_auto_browser_test_name'))]"
      ],
      "properties": {
        "applicableEnvironmentsMode": "SpecifiedEnvironments"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2024-10-01",
      "name": "[parameters('accounts_aoai_poc_auto_browser_test_name')]",
      "location": "eastus",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "apiProperties": {},
        "customSubDomainName": "[parameters('accounts_aoai_poc_auto_browser_test_name')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.App/containerapps",
      "apiVersion": "2024-08-02-preview",
      "name": "[parameters('containerapps_acaapp_poc_aca_name')]",
      "location": "West US 2",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('managedEnvironments_acaapp_poc_aca_env_name'))]"
      ],
      "identity": {
        "type": "None"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('managedEnvironments_acaapp_poc_aca_env_name'))]",
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('managedEnvironments_acaapp_poc_aca_env_name'))]",
        "workloadProfileName": "Consumption",
        "configuration": {
          "secrets": [
            {
              "name": "cac3a19541d4acrazurecrio-cac3a19541d4acr"
            }
          ],
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 3100,
            "exposedPort": 0,
            "transport": "Auto",
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ],
            "allowInsecure": false
          },
          "registries": [
            {
              "server": "cac3a19541d4acr.azurecr.io",
              "username": "cac3a19541d4acr",
              "passwordSecretRef": "cac3a19541d4acrazurecrio-cac3a19541d4acr"
            }
          ],
          "identitySettings": [],
          "maxInactiveRevisions": 100
        },
        "template": {
          "containers": [
            {
              "image": "[concat('cac3a19541d4acr.azurecr.io/', parameters('containerapps_acaapp_poc_aca_name'), ':20250130213004021865')]",
              "imageType": "ContainerImage",
              "name": "[parameters('containerapps_acaapp_poc_aca_name')]",
              "resources": {
                "cpu": 0.5,
                "memory": "1Gi"
              }
            }
          ],
          "scale": {
            "maxReplicas": 10,
            "cooldownPeriod": 300,
            "pollingInterval": 30
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2024-09-01-preview",
      "name": "[parameters('databaseAccounts_cosmos_poc_broser_test_name')]",
      "location": "East US",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": ""
      },
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "None"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "analyticalStorageConfiguration": {
          "schemaType": "WellDefined"
        },
        "databaseAccountOfferType": "Standard",
        "enableMaterializedViews": false,
        "capacityMode": "Serverless",
        "defaultIdentity": "FirstPartyIdentity",
        "networkAclBypass": "None",
        "disableLocalAuth": false,
        "enablePartitionMerge": false,
        "enablePerRegionPerPartitionAutoscale": false,
        "enableBurstCapacity": false,
        "enablePriorityBasedExecution": false,
        "defaultPriorityLevel": "High",
        "minimalTlsVersion": "Tls12",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "East US",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "cors": [],
        "capabilities": [],
        "ipRules": [],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          }
        },
        "networkAclBypassResourceIds": [],
        "diagnosticLogSettings": {
          "enableFullTextQuery": "None"
        },
        "capacity": {
          "totalThroughputLimit": 4000
        }
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2024-08-02-preview",
      "name": "[parameters('managedEnvironments_acaapp_poc_aca_env_name')]",
      "location": "West US 2",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "f76ffcb1-e092-4df7-a3c2-5dd500ab0a04",
            "dynamicJsonColumns": false
          }
        },
        "zoneRedundant": false,
        "kedaConfiguration": {},
        "daprConfiguration": {},
        "customDomainConfiguration": {},
        "workloadProfiles": [
          {
            "workloadProfileType": "Consumption",
            "name": "Consumption",
            "enableFips": false
          }
        ],
        "peerAuthentication": {
          "mtls": {
            "enabled": false
          }
        },
        "peerTrafficConfiguration": {
          "encryption": {
            "enabled": false
          }
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-11-01-preview",
      "name": "[parameters('registries_cac3a19541d4acr_name')]",
      "location": "westus2",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "policies": {
          "quarantinePolicy": {
            "status": "disabled"
          },
          "trustPolicy": {
            "type": "Notary",
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices",
        "zoneRedundancy": "Disabled",
        "anonymousPullEnabled": false,
        "metadataSearch": "Disabled"
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('staticSites_swa_poc_auto_browser_test_name')]",
      "location": "East US 2",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "https://github.com/SatakeYusuke19920527/poc-auto-browser-test",
        "branch": "main",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "provider": "GitHub",
        "enterpriseGradeCdnStatus": "Disabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('workspaces_workspace_rgpocautobrowsertestmI0Z_name')]",
      "location": "westus2",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "legacy": 0,
          "searchVersion": 1,
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    }
  ]
}
